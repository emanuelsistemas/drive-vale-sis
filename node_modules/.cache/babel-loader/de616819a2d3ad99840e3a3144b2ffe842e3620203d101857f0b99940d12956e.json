{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useToast } from '../contexts/ToastContext';\nimport { uploadFile, listFiles, deleteFile, getFileUrl } from '../services/fileService';\nexport const useFiles = () => {\n  _s();\n  const {\n    user\n  } = useAuth();\n  const {\n    showToast\n  } = useToast();\n  const [files, setFiles] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  useEffect(() => {\n    if (user) {\n      fetchFiles();\n    }\n  }, [user]);\n  const fetchFiles = async () => {\n    if (!user) return;\n    try {\n      setLoading(true);\n      const fileList = await listFiles(user.id);\n      // Converter FileRecord[] para FileObject[] garantindo que todos os campos obrigatórios estejam presentes\n      const fileObjects = fileList.map(file => ({\n        id: String(file.id || ''),\n        // Converter para string conforme exigido pelo tipo FileObject\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        path: file.path,\n        created_at: file.created_at || new Date().toISOString(),\n        updated_at: file.updated_at || new Date().toISOString(),\n        user_id: String(file.user_id),\n        // Converter para string conforme exigido pelo tipo FileObject\n        url: '',\n        // Inicializa com string vazia, será preenchida quando necessário\n        is_public: file.is_public\n      }));\n      setFiles(fileObjects);\n    } catch (error) {\n      console.error('Erro ao buscar arquivos:', error);\n      showToast('Erro ao carregar arquivos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleUpload = async file => {\n    if (!user) return;\n    try {\n      setUploading(true);\n      const newFile = await uploadFile(file, user.id);\n      setFiles(prev => [newFile, ...prev]);\n      showToast('Arquivo enviado com sucesso!');\n      return newFile;\n    } catch (error) {\n      console.error('Erro ao fazer upload:', error);\n      showToast('Erro ao enviar arquivo', 'error');\n      throw error;\n    } finally {\n      setUploading(false);\n    }\n  };\n  const handleDelete = async (fileId, filePath) => {\n    try {\n      await deleteFile(fileId, filePath);\n      setFiles(prev => prev.filter(file => file.id !== fileId));\n      showToast('Arquivo excluído com sucesso!');\n      return true;\n    } catch (error) {\n      console.error('Erro ao excluir arquivo:', error);\n      showToast('Erro ao excluir arquivo', 'error');\n      throw error;\n    }\n  };\n  const getDownloadUrl = async filePath => {\n    try {\n      return await getFileUrl(filePath);\n    } catch (error) {\n      console.error('Erro ao obter URL de download:', error);\n      showToast('Erro ao gerar link de download', 'error');\n      throw error;\n    }\n  };\n  return {\n    files,\n    loading,\n    uploading,\n    fetchFiles,\n    handleUpload,\n    handleDelete,\n    getDownloadUrl\n  };\n};\n_s(useFiles, \"YMTPPTMB16tqsDPXu2KI231mDPY=\", false, function () {\n  return [useAuth, useToast];\n});","map":{"version":3,"names":["useState","useEffect","useAuth","useToast","uploadFile","listFiles","deleteFile","getFileUrl","useFiles","_s","user","showToast","files","setFiles","loading","setLoading","uploading","setUploading","fetchFiles","fileList","id","fileObjects","map","file","String","name","size","type","path","created_at","Date","toISOString","updated_at","user_id","url","is_public","error","console","handleUpload","newFile","prev","handleDelete","fileId","filePath","filter","getDownloadUrl"],"sources":["/root/m-software/drive-react/src/hooks/useFiles.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useToast } from '../contexts/ToastContext';\nimport { uploadFile, listFiles, deleteFile, getFileUrl } from '../services/fileService';\nimport { FileObject } from '../types/supabase';\n\nexport const useFiles = () => {\n  const { user } = useAuth();\n  const { showToast } = useToast();\n  \n  const [files, setFiles] = useState<FileObject[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [uploading, setUploading] = useState(false);\n  \n  useEffect(() => {\n    if (user) {\n      fetchFiles();\n    }\n  }, [user]);\n  \n  const fetchFiles = async () => {\n    if (!user) return;\n    \n    try {\n      setLoading(true);\n      const fileList = await listFiles(user.id);\n      // Converter FileRecord[] para FileObject[] garantindo que todos os campos obrigatórios estejam presentes\n      const fileObjects: FileObject[] = fileList.map(file => ({\n        id: String(file.id || ''),  // Converter para string conforme exigido pelo tipo FileObject\n        name: file.name,\n        size: file.size,\n        type: file.type,\n        path: file.path,\n        created_at: file.created_at || new Date().toISOString(),\n        updated_at: file.updated_at || new Date().toISOString(),\n        user_id: String(file.user_id),  // Converter para string conforme exigido pelo tipo FileObject\n        url: '',  // Inicializa com string vazia, será preenchida quando necessário\n        is_public: file.is_public\n      }));\n      setFiles(fileObjects);\n    } catch (error) {\n      console.error('Erro ao buscar arquivos:', error);\n      showToast('Erro ao carregar arquivos', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleUpload = async (file: File) => {\n    if (!user) return;\n    \n    try {\n      setUploading(true);\n      const newFile = await uploadFile(file, user.id);\n      setFiles(prev => [newFile, ...prev]);\n      showToast('Arquivo enviado com sucesso!');\n      return newFile;\n    } catch (error) {\n      console.error('Erro ao fazer upload:', error);\n      showToast('Erro ao enviar arquivo', 'error');\n      throw error;\n    } finally {\n      setUploading(false);\n    }\n  };\n  \n  const handleDelete = async (fileId: string, filePath: string) => {\n    try {\n      await deleteFile(fileId, filePath);\n      setFiles(prev => prev.filter(file => file.id !== fileId));\n      showToast('Arquivo excluído com sucesso!');\n      return true;\n    } catch (error) {\n      console.error('Erro ao excluir arquivo:', error);\n      showToast('Erro ao excluir arquivo', 'error');\n      throw error;\n    }\n  };\n  \n  const getDownloadUrl = async (filePath: string) => {\n    try {\n      return await getFileUrl(filePath);\n    } catch (error) {\n      console.error('Erro ao obter URL de download:', error);\n      showToast('Erro ao gerar link de download', 'error');\n      throw error;\n    }\n  };\n  \n  return {\n    files,\n    loading,\n    uploading,\n    fetchFiles,\n    handleUpload,\n    handleDelete,\n    getDownloadUrl\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}