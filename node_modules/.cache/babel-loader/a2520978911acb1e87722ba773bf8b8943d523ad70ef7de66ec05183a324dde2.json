{"ast":null,"code":"import { supabase } from './supabase';\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * Função para corrigir as políticas RLS que estão causando recursão infinita\n */\nexport const fixRlsPolicies = async () => {\n  try {\n    console.log('Iniciando correção das políticas RLS...');\n\n    // Ler o arquivo SQL\n    const sqlPath = path.join(__dirname, '../sql/fix_rls_policies.sql');\n    const sqlContent = fs.readFileSync(sqlPath, 'utf8');\n\n    // Dividir o SQL em comandos individuais\n    const sqlCommands = sqlContent.split(';').filter(cmd => cmd.trim().length > 0);\n\n    // Executar cada comando SQL\n    for (const command of sqlCommands) {\n      try {\n        const {\n          error\n        } = await supabase.rpc('exec', {\n          query: command + ';'\n        });\n        if (error) {\n          console.error('Erro ao executar comando SQL:', error);\n          console.error('Comando:', command);\n        }\n      } catch (err) {\n        console.error('Exceção ao executar comando SQL:', err);\n        console.error('Comando:', command);\n      }\n    }\n    console.log('Correção das políticas RLS concluída!');\n    return {\n      success: true\n    };\n  } catch (error) {\n    console.error('Erro ao corrigir políticas RLS:', error);\n    return {\n      success: false,\n      error\n    };\n  }\n};\nexport default fixRlsPolicies;","map":{"version":3,"names":["supabase","fs","path","fixRlsPolicies","console","log","sqlPath","join","__dirname","sqlContent","readFileSync","sqlCommands","split","filter","cmd","trim","length","command","error","rpc","query","err","success"],"sources":["/root/m-software/drive-react/src/services/fixRlsPolicies.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport fs from 'fs';\nimport path from 'path';\n\n/**\n * Função para corrigir as políticas RLS que estão causando recursão infinita\n */\nexport const fixRlsPolicies = async () => {\n  try {\n    console.log('Iniciando correção das políticas RLS...');\n    \n    // Ler o arquivo SQL\n    const sqlPath = path.join(__dirname, '../sql/fix_rls_policies.sql');\n    const sqlContent = fs.readFileSync(sqlPath, 'utf8');\n    \n    // Dividir o SQL em comandos individuais\n    const sqlCommands = sqlContent.split(';').filter(cmd => cmd.trim().length > 0);\n    \n    // Executar cada comando SQL\n    for (const command of sqlCommands) {\n      try {\n        const { error } = await supabase.rpc('exec', { \n          query: command + ';' \n        });\n        \n        if (error) {\n          console.error('Erro ao executar comando SQL:', error);\n          console.error('Comando:', command);\n        }\n      } catch (err) {\n        console.error('Exceção ao executar comando SQL:', err);\n        console.error('Comando:', command);\n      }\n    }\n    \n    console.log('Correção das políticas RLS concluída!');\n    return { success: true };\n  } catch (error) {\n    console.error('Erro ao corrigir políticas RLS:', error);\n    return { success: false, error };\n  }\n};\n\nexport default fixRlsPolicies;\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;AACrC,OAAOC,EAAE,MAAM,IAAI;AACnB,OAAOC,IAAI,MAAM,MAAM;;AAEvB;AACA;AACA;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,yCAAyC,CAAC;;IAEtD;IACA,MAAMC,OAAO,GAAGJ,IAAI,CAACK,IAAI,CAACC,SAAS,EAAE,6BAA6B,CAAC;IACnE,MAAMC,UAAU,GAAGR,EAAE,CAACS,YAAY,CAACJ,OAAO,EAAE,MAAM,CAAC;;IAEnD;IACA,MAAMK,WAAW,GAAGF,UAAU,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;;IAE9E;IACA,KAAK,MAAMC,OAAO,IAAIN,WAAW,EAAE;MACjC,IAAI;QACF,MAAM;UAAEO;QAAM,CAAC,GAAG,MAAMlB,QAAQ,CAACmB,GAAG,CAAC,MAAM,EAAE;UAC3CC,KAAK,EAAEH,OAAO,GAAG;QACnB,CAAC,CAAC;QAEF,IAAIC,KAAK,EAAE;UACTd,OAAO,CAACc,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrDd,OAAO,CAACc,KAAK,CAAC,UAAU,EAAED,OAAO,CAAC;QACpC;MACF,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZjB,OAAO,CAACc,KAAK,CAAC,kCAAkC,EAAEG,GAAG,CAAC;QACtDjB,OAAO,CAACc,KAAK,CAAC,UAAU,EAAED,OAAO,CAAC;MACpC;IACF;IAEAb,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;IACpD,OAAO;MAAEiB,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdd,OAAO,CAACc,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;IACvD,OAAO;MAAEI,OAAO,EAAE,KAAK;MAAEJ;IAAM,CAAC;EAClC;AACF,CAAC;AAED,eAAef,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}