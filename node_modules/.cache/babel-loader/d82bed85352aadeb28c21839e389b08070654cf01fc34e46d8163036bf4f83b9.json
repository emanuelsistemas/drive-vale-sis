{"ast":null,"code":"var _jsxFileName = \"/root/m-software/drive-react/src/pages/Auth/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, LoginContainer, FormContainer, FormToggle, TerminalLine, TerminalPrompt, TerminalText, Cursor } from './styles';\n\n// Importação centralizada dos componentes\nimport { Logo, Input, PasswordInput, Button } from '../../components';\n\n// Importação dos contextos\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useToast } from '../../contexts/ToastContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Auth = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    signIn,\n    signUp\n  } = useAuth();\n  const {\n    showToast\n  } = useToast();\n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n\n  // Login form state\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n\n  // Signup form state\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n\n  // Errors\n  const [usernameError, setUsernameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [adminPasswordError, setAdminPasswordError] = useState('');\n  const validateUsername = () => {\n    if (username.length > 0 && username.length < 3) {\n      setUsernameError('O nome de usuário deve ter pelo menos 3 caracteres');\n      return false;\n    } else {\n      setUsernameError('');\n      return true;\n    }\n  };\n  const validateEmail = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (email.length > 0 && !emailRegex.test(email)) {\n      setEmailError('Formato de email inválido');\n      return false;\n    } else {\n      setEmailError('');\n      return true;\n    }\n  };\n  const validatePassword = () => {\n    if (password.length > 0 && password.length < 6) {\n      setPasswordError('A senha deve ter pelo menos 6 caracteres');\n      return false;\n    } else {\n      setPasswordError('');\n      return true;\n    }\n  };\n  const validateConfirmPassword = () => {\n    if (confirmPassword.length > 0 && password !== confirmPassword) {\n      setConfirmPasswordError('As senhas não coincidem');\n      return false;\n    } else {\n      setConfirmPasswordError('');\n      return true;\n    }\n  };\n  const validateAdminPassword = () => {\n    if (adminPassword.length === 0) {\n      setAdminPasswordError('A senha de autorização é obrigatória');\n      return false;\n    } else {\n      setAdminPasswordError('');\n      return true;\n    }\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await signIn(loginEmail, loginPassword);\n      if (error) {\n        showToast(error.message || 'Erro ao fazer login', 'error');\n      } else {\n        showToast('Login realizado com sucesso!');\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 1000);\n      }\n    } catch (error) {\n      showToast('Erro ao conectar com o servidor', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSignup = async e => {\n    e.preventDefault();\n\n    // Validar todos os campos\n    const isUsernameValid = validateUsername();\n    const isEmailValid = validateEmail();\n    const isPasswordValid = validatePassword();\n    const isConfirmPasswordValid = validateConfirmPassword();\n    const isAdminPasswordValid = validateAdminPassword();\n\n    // Se algum campo não for válido, interromper o cadastro\n    if (!isUsernameValid || !isEmailValid || !isPasswordValid || !isConfirmPasswordValid || !isAdminPasswordValid) {\n      showToast('Por favor, corrija os erros no formulário', 'error');\n      return;\n    }\n\n    // Verificar se todos os campos foram preenchidos\n    if (!username || !email || !password || !confirmPassword || !adminPassword) {\n      showToast('Todos os campos são obrigatórios', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await signUp(email, password, username, adminPassword);\n      if (error) {\n        showToast(error.message || 'Erro ao criar conta', 'error');\n      } else {\n        showToast('Conta criada com sucesso!');\n        setIsLogin(true);\n\n        // Reset form\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setAdminPassword('');\n      }\n    } catch (error) {\n      showToast('Erro ao conectar com o servidor', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(LoginContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TerminalLine, {\n        children: [/*#__PURE__*/_jsxDEV(TerminalPrompt, {\n          children: \"root@valeterm:~$\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TerminalText, {\n          children: isLogin ? 'iniciar_sessao' : 'novo_usuario'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Cursor, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormToggle, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: isLogin ? 'active' : '',\n          onClick: () => setIsLogin(true),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: !isLogin ? 'active' : '',\n          onClick: () => setIsLogin(false),\n          children: \"Cadastro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), isLogin ? /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleLogin,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"login-email\",\n          label: \"Email\",\n          type: \"email\",\n          value: loginEmail,\n          onChange: e => setLoginEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"login-password\",\n          label: \"Senha\",\n          value: loginPassword,\n          onChange: e => setLoginPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          isLoading: loading,\n          children: \"Entrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(FormContainer, {\n        onSubmit: handleSignup,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          id: \"username\",\n          label: \"Nome de Usu\\xE1rio\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value),\n          onBlur: () => validateUsername(),\n          error: usernameError,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          id: \"email\",\n          label: \"Email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          onBlur: () => validateEmail(),\n          error: emailError,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"password\",\n          label: \"Senha\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          onBlur: () => validatePassword(),\n          error: passwordError,\n          required: true,\n          minLength: 6\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"confirm-password\",\n          label: \"Confirmar Senha\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          onBlur: () => validateConfirmPassword(),\n          error: confirmPasswordError,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(PasswordInput, {\n          id: \"admin-password\",\n          label: \"Senha de Autoriza\\xE7\\xE3o\",\n          value: adminPassword,\n          onChange: e => setAdminPassword(e.target.value),\n          onBlur: () => validateAdminPassword(),\n          error: adminPasswordError,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          isLoading: loading,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"5uNH81J1MTTLMI/qv458hRU5Vyg=\", false, function () {\n  return [useNavigate, useAuth, useToast];\n});\n_c = Auth;\nexport default Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["React","useState","useNavigate","Container","LoginContainer","FormContainer","FormToggle","TerminalLine","TerminalPrompt","TerminalText","Cursor","Logo","Input","PasswordInput","Button","useAuth","useToast","jsxDEV","_jsxDEV","Auth","_s","navigate","signIn","signUp","showToast","isLogin","setIsLogin","loading","setLoading","loginEmail","setLoginEmail","loginPassword","setLoginPassword","username","setUsername","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","adminPassword","setAdminPassword","usernameError","setUsernameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","adminPasswordError","setAdminPasswordError","validateUsername","length","validateEmail","emailRegex","test","validatePassword","validateConfirmPassword","validateAdminPassword","handleLogin","e","preventDefault","error","message","setTimeout","handleSignup","isUsernameValid","isEmailValid","isPasswordValid","isConfirmPasswordValid","isAdminPasswordValid","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onSubmit","id","label","type","value","onChange","target","required","fullWidth","isLoading","onBlur","minLength","_c","$RefreshReg$"],"sources":["/root/m-software/drive-react/src/pages/Auth/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { \n  Container, \n  LoginContainer, \n  FormContainer, \n  FormToggle, \n  TerminalLine,\n  TerminalPrompt,\n  TerminalText,\n  Cursor\n} from './styles';\n\n// Importação centralizada dos componentes\nimport { Logo, Input, PasswordInput, Button } from '../../components';\n\n// Importação dos contextos\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useToast } from '../../contexts/ToastContext';\n\nconst Auth: React.FC = () => {\n  const navigate = useNavigate();\n  const { signIn, signUp } = useAuth();\n  const { showToast } = useToast();\n  \n  const [isLogin, setIsLogin] = useState(true);\n  const [loading, setLoading] = useState(false);\n  \n  // Login form state\n  const [loginEmail, setLoginEmail] = useState('');\n  const [loginPassword, setLoginPassword] = useState('');\n  \n  // Signup form state\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [adminPassword, setAdminPassword] = useState('');\n  \n  // Errors\n  const [usernameError, setUsernameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n  const [adminPasswordError, setAdminPasswordError] = useState('');\n  \n  const validateUsername = () => {\n    if (username.length > 0 && username.length < 3) {\n      setUsernameError('O nome de usuário deve ter pelo menos 3 caracteres');\n      return false;\n    } else {\n      setUsernameError('');\n      return true;\n    }\n  };\n  \n  const validateEmail = () => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (email.length > 0 && !emailRegex.test(email)) {\n      setEmailError('Formato de email inválido');\n      return false;\n    } else {\n      setEmailError('');\n      return true;\n    }\n  };\n  \n  const validatePassword = () => {\n    if (password.length > 0 && password.length < 6) {\n      setPasswordError('A senha deve ter pelo menos 6 caracteres');\n      return false;\n    } else {\n      setPasswordError('');\n      return true;\n    }\n  };\n  \n  const validateConfirmPassword = () => {\n    if (confirmPassword.length > 0 && password !== confirmPassword) {\n      setConfirmPasswordError('As senhas não coincidem');\n      return false;\n    } else {\n      setConfirmPasswordError('');\n      return true;\n    }\n  };\n  \n  const validateAdminPassword = () => {\n    if (adminPassword.length === 0) {\n      setAdminPasswordError('A senha de autorização é obrigatória');\n      return false;\n    } else {\n      setAdminPasswordError('');\n      return true;\n    }\n  };\n  \n  const handleLogin = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    try {\n      const { error } = await signIn(loginEmail, loginPassword);\n      \n      if (error) {\n        showToast(error.message || 'Erro ao fazer login', 'error');\n      } else {\n        showToast('Login realizado com sucesso!');\n        setTimeout(() => {\n          navigate('/dashboard');\n        }, 1000);\n      }\n    } catch (error) {\n      showToast('Erro ao conectar com o servidor', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  const handleSignup = async (e: React.FormEvent) => {\n    e.preventDefault();\n    \n    // Validar todos os campos\n    const isUsernameValid = validateUsername();\n    const isEmailValid = validateEmail();\n    const isPasswordValid = validatePassword();\n    const isConfirmPasswordValid = validateConfirmPassword();\n    const isAdminPasswordValid = validateAdminPassword();\n    \n    // Se algum campo não for válido, interromper o cadastro\n    if (!isUsernameValid || !isEmailValid || !isPasswordValid || !isConfirmPasswordValid || !isAdminPasswordValid) {\n      showToast('Por favor, corrija os erros no formulário', 'error');\n      return;\n    }\n    \n    // Verificar se todos os campos foram preenchidos\n    if (!username || !email || !password || !confirmPassword || !adminPassword) {\n      showToast('Todos os campos são obrigatórios', 'error');\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const { error } = await signUp(email, password, username, adminPassword);\n      \n      if (error) {\n        showToast(error.message || 'Erro ao criar conta', 'error');\n      } else {\n        showToast('Conta criada com sucesso!');\n        setIsLogin(true);\n        \n        // Reset form\n        setUsername('');\n        setEmail('');\n        setPassword('');\n        setConfirmPassword('');\n        setAdminPassword('');\n      }\n    } catch (error) {\n      showToast('Erro ao conectar com o servidor', 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  return (\n    <Container>\n      <LoginContainer>\n        <Logo />\n        \n        <TerminalLine>\n          <TerminalPrompt>root@valeterm:~$</TerminalPrompt> \n          <TerminalText>{isLogin ? 'iniciar_sessao' : 'novo_usuario'}</TerminalText>\n          <Cursor />\n        </TerminalLine>\n        \n        <FormToggle>\n          <button \n            className={isLogin ? 'active' : ''} \n            onClick={() => setIsLogin(true)}\n          >\n            Login\n          </button>\n          <button \n            className={!isLogin ? 'active' : ''} \n            onClick={() => setIsLogin(false)}\n          >\n            Cadastro\n          </button>\n        </FormToggle>\n        \n        {isLogin ? (\n          <FormContainer onSubmit={handleLogin}>\n            <Input \n              id=\"login-email\" \n              label=\"Email\" \n              type=\"email\" \n              value={loginEmail} \n              onChange={(e) => setLoginEmail(e.target.value)} \n              required \n            />\n            \n            <PasswordInput \n              id=\"login-password\" \n              label=\"Senha\" \n              value={loginPassword} \n              onChange={(e) => setLoginPassword(e.target.value)} \n              required \n            />\n            \n            <Button \n              type=\"submit\" \n              fullWidth \n              isLoading={loading}\n            >\n              Entrar\n            </Button>\n          </FormContainer>\n        ) : (\n          <FormContainer onSubmit={handleSignup}>\n            <Input \n              id=\"username\" \n              label=\"Nome de Usuário\" \n              type=\"text\" \n              value={username} \n              onChange={(e) => setUsername(e.target.value)}\n              onBlur={() => validateUsername()}\n              error={usernameError}\n              required \n            />\n            \n            <Input \n              id=\"email\" \n              label=\"Email\" \n              type=\"email\" \n              value={email} \n              onChange={(e) => setEmail(e.target.value)}\n              onBlur={() => validateEmail()}\n              error={emailError}\n              required \n            />\n            \n            <PasswordInput \n              id=\"password\" \n              label=\"Senha\" \n              value={password} \n              onChange={(e) => setPassword(e.target.value)} \n              onBlur={() => validatePassword()}\n              error={passwordError}\n              required \n              minLength={6}\n            />\n            \n            <PasswordInput \n              id=\"confirm-password\" \n              label=\"Confirmar Senha\" \n              value={confirmPassword} \n              onChange={(e) => setConfirmPassword(e.target.value)}\n              onBlur={() => validateConfirmPassword()}\n              error={confirmPasswordError}\n              required \n            />\n            \n            <PasswordInput \n              id=\"admin-password\" \n              label=\"Senha de Autorização\" \n              value={adminPassword} \n              onChange={(e) => setAdminPassword(e.target.value)}\n              onBlur={() => validateAdminPassword()}\n              error={adminPasswordError}\n              required \n            />\n            \n            <Button \n              type=\"submit\" \n              fullWidth \n              isLoading={loading}\n            >\n              Cadastrar\n            </Button>\n          </FormContainer>\n        )}\n      </LoginContainer>\n    </Container>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}