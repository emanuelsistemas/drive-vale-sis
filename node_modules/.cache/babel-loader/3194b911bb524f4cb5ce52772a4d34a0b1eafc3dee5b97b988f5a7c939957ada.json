{"ast":null,"code":"import styled from 'styled-components';\n// Função para obter o tamanho da imagem com base na propriedade size\nconst getImageSize = size => {\n  switch (size) {\n    case 'small':\n      return '40px';\n    case 'large':\n      return '80px';\n    case 'medium':\n    default:\n      return '60px';\n  }\n};\n\n// Função para obter o tamanho da fonte com base na propriedade size\nconst getFontSize = size => {\n  switch (size) {\n    case 'small':\n      return '20px';\n    case 'large':\n      return '36px';\n    case 'medium':\n    default:\n      return '28px';\n  }\n};\n\n// Função para obter a margem superior do texto com base na propriedade size\nconst getTextMarginTop = size => {\n  switch (size) {\n    case 'small':\n      return '-8px';\n    case 'large':\n      return '-12px';\n    case 'medium':\n    default:\n      return '-10px';\n  }\n};\nexport const LogoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${props => props.size === 'small' ? '15px' : '30px'};\n  width: 100%;\n  cursor: ${props => props.onClick ? 'pointer' : 'default'};\n`;\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0;\n`;\nexport const LogoImage = styled.img`\n  height: ${props => getImageSize(props.size)};\n  width: auto;\n  filter: invert(48%) sepia(79%) saturate(2476%) hue-rotate(86deg) brightness(118%) contrast(119%);\n`;\nexport const LogoText = styled.h1`\n  font-family: 'MuseoModerno', cursive;\n  font-size: ${props => getFontSize(props.size)};\n  font-weight: 700;\n  color: var(--text-color); /* Verde terminal clássico #00ff41 */\n  letter-spacing: 1px;\n  text-transform: lowercase;\n  text-shadow: 0 0 5px var(--text-color);\n  margin-top: ${props => getTextMarginTop(props.size)};\n`;","map":{"version":3,"names":["styled","getImageSize","size","getFontSize","getTextMarginTop","LogoContainer","div","props","onClick","LogoWrapper","LogoImage","img","LogoText","h1"],"sources":["/root/m-software/drive-react/src/components/Logo/styles.ts"],"sourcesContent":["import styled from 'styled-components';\n\ninterface SizeProps {\n  size?: 'small' | 'medium' | 'large';\n}\n\n// Função para obter o tamanho da imagem com base na propriedade size\nconst getImageSize = (size?: string) => {\n  switch (size) {\n    case 'small':\n      return '40px';\n    case 'large':\n      return '80px';\n    case 'medium':\n    default:\n      return '60px';\n  }\n};\n\n// Função para obter o tamanho da fonte com base na propriedade size\nconst getFontSize = (size?: string) => {\n  switch (size) {\n    case 'small':\n      return '20px';\n    case 'large':\n      return '36px';\n    case 'medium':\n    default:\n      return '28px';\n  }\n};\n\n// Função para obter a margem superior do texto com base na propriedade size\nconst getTextMarginTop = (size?: string) => {\n  switch (size) {\n    case 'small':\n      return '-8px';\n    case 'large':\n      return '-12px';\n    case 'medium':\n    default:\n      return '-10px';\n  }\n};\n\nexport const LogoContainer = styled.div<SizeProps>`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: ${props => props.size === 'small' ? '15px' : '30px'};\n  width: 100%;\n  cursor: ${props => props.onClick ? 'pointer' : 'default'};\n`;\n\nexport const LogoWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 0;\n`;\n\nexport const LogoImage = styled.img<SizeProps>`\n  height: ${props => getImageSize(props.size)};\n  width: auto;\n  filter: invert(48%) sepia(79%) saturate(2476%) hue-rotate(86deg) brightness(118%) contrast(119%);\n`;\n\nexport const LogoText = styled.h1<SizeProps>`\n  font-family: 'MuseoModerno', cursive;\n  font-size: ${props => getFontSize(props.size)};\n  font-weight: 700;\n  color: var(--text-color); /* Verde terminal clássico #00ff41 */\n  letter-spacing: 1px;\n  text-transform: lowercase;\n  text-shadow: 0 0 5px var(--text-color);\n  margin-top: ${props => getTextMarginTop(props.size)};\n`;\n"],"mappings":"AAAA,OAAOA,MAAM,MAAM,mBAAmB;AAMtC;AACA,MAAMC,YAAY,GAAIC,IAAa,IAAK;EACtC,QAAQA,IAAI;IACV,KAAK,OAAO;MACV,OAAO,MAAM;IACf,KAAK,OAAO;MACV,OAAO,MAAM;IACf,KAAK,QAAQ;IACb;MACE,OAAO,MAAM;EACjB;AACF,CAAC;;AAED;AACA,MAAMC,WAAW,GAAID,IAAa,IAAK;EACrC,QAAQA,IAAI;IACV,KAAK,OAAO;MACV,OAAO,MAAM;IACf,KAAK,OAAO;MACV,OAAO,MAAM;IACf,KAAK,QAAQ;IACb;MACE,OAAO,MAAM;EACjB;AACF,CAAC;;AAED;AACA,MAAME,gBAAgB,GAAIF,IAAa,IAAK;EAC1C,QAAQA,IAAI;IACV,KAAK,OAAO;MACV,OAAO,MAAM;IACf,KAAK,OAAO;MACV,OAAO,OAAO;IAChB,KAAK,QAAQ;IACb;MACE,OAAO,OAAO;EAClB;AACF,CAAC;AAED,OAAO,MAAMG,aAAa,GAAGL,MAAM,CAACM,GAAc;AAClD;AACA;AACA;AACA,mBAAmBC,KAAK,IAAIA,KAAK,CAACL,IAAI,KAAK,OAAO,GAAG,MAAM,GAAG,MAAM;AACpE;AACA,YAAYK,KAAK,IAAIA,KAAK,CAACC,OAAO,GAAG,SAAS,GAAG,SAAS;AAC1D,CAAC;AAED,OAAO,MAAMC,WAAW,GAAGT,MAAM,CAACM,GAAG;AACrC;AACA;AACA;AACA;AACA,CAAC;AAED,OAAO,MAAMI,SAAS,GAAGV,MAAM,CAACW,GAAc;AAC9C,YAAYJ,KAAK,IAAIN,YAAY,CAACM,KAAK,CAACL,IAAI,CAAC;AAC7C;AACA;AACA,CAAC;AAED,OAAO,MAAMU,QAAQ,GAAGZ,MAAM,CAACa,EAAa;AAC5C;AACA,eAAeN,KAAK,IAAIJ,WAAW,CAACI,KAAK,CAACL,IAAI,CAAC;AAC/C;AACA;AACA;AACA;AACA;AACA,gBAAgBK,KAAK,IAAIH,gBAAgB,CAACG,KAAK,CAACL,IAAI,CAAC;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}