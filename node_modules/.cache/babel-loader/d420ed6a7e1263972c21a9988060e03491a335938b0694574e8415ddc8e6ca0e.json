{"ast":null,"code":"import React,{useEffect}from'react';import{BrowserRouter as Router,Routes,Route,Navigate}from'react-router-dom';import{ThemeProvider}from'styled-components';import GlobalStyles from'./styles/GlobalStyles';import theme from'./styles/theme';// Importações de contextos\nimport{AuthProvider,useAuth}from'./contexts/AuthContext';import{ToastProvider}from'./contexts/ToastContext';// Importações de páginas\nimport Auth from'./pages/Auth';import Dashboard from'./pages/Dashboard';// Importação da função para criar tabelas\nimport{createRequiredTables}from'./services/createTables';// Componente para rotas protegidas\nimport{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{element}=_ref;const{user,loading}=useAuth();if(loading){return/*#__PURE__*/_jsx(\"div\",{children:\"Carregando...\"});}return user?/*#__PURE__*/_jsx(_Fragment,{children:element}):/*#__PURE__*/_jsx(Navigate,{to:\"/\"});};const App=()=>{useEffect(()=>{// Criar as tabelas necessárias no banco de dados ao iniciar a aplicação\ncreateRequiredTables().then(result=>{if(result.success){console.log('Tabelas verificadas com sucesso!');}else{console.error('Erro ao verificar tabelas:',result.error);}});},[]);return/*#__PURE__*/_jsxs(ThemeProvider,{theme:theme,children:[/*#__PURE__*/_jsx(GlobalStyles,{}),/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(ToastProvider,{children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(Auth,{})}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",element:/*#__PURE__*/_jsx(ProtectedRoute,{element:/*#__PURE__*/_jsx(Dashboard,{})})}),/*#__PURE__*/_jsx(Route,{path:\"*\",element:/*#__PURE__*/_jsx(Navigate,{to:\"/\"})})]})})})})]});};export default App;","map":{"version":3,"names":["React","useEffect","BrowserRouter","Router","Routes","Route","Navigate","ThemeProvider","GlobalStyles","theme","AuthProvider","useAuth","ToastProvider","Auth","Dashboard","createRequiredTables","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ProtectedRoute","_ref","element","user","loading","children","to","App","then","result","success","console","log","error","path"],"sources":["/root/m-software/drive-react/src/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { ThemeProvider } from 'styled-components';\nimport GlobalStyles from './styles/GlobalStyles';\nimport theme from './styles/theme';\n\n// Importações de contextos\nimport { AuthProvider, useAuth } from './contexts/AuthContext';\nimport { ToastProvider } from './contexts/ToastContext';\n\n// Importações de páginas\nimport Auth from './pages/Auth';\nimport Dashboard from './pages/Dashboard';\n\n// Importação da função para criar tabelas\nimport { createRequiredTables } from './services/createTables';\n\n// Componente para rotas protegidas\nconst ProtectedRoute: React.FC<{ element: React.ReactNode }> = ({ element }) => {\n  const { user, loading } = useAuth();\n  \n  if (loading) {\n    return <div>Carregando...</div>;\n  }\n  \n  return user ? <>{element}</> : <Navigate to=\"/\" />;\n};\n\nconst App: React.FC = () => {\n  useEffect(() => {\n    // Criar as tabelas necessárias no banco de dados ao iniciar a aplicação\n    createRequiredTables()\n      .then(result => {\n        if (result.success) {\n          console.log('Tabelas verificadas com sucesso!');\n        } else {\n          console.error('Erro ao verificar tabelas:', result.error);\n        }\n      });\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <AuthProvider>\n        <ToastProvider>\n          <Router>\n            <Routes>\n              <Route path=\"/\" element={<Auth />} />\n              <Route \n                path=\"/dashboard\" \n                element={\n                  <ProtectedRoute element={<Dashboard />} />\n                } \n              />\n              <Route path=\"*\" element={<Navigate to=\"/\" />} />\n            </Routes>\n          </Router>\n        </ToastProvider>\n      </AuthProvider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,KAAQ,OAAO,CACxC,OAASC,aAAa,GAAI,CAAAC,MAAM,CAAEC,MAAM,CAAEC,KAAK,CAAEC,QAAQ,KAAQ,kBAAkB,CACnF,OAASC,aAAa,KAAQ,mBAAmB,CACjD,MAAO,CAAAC,YAAY,KAAM,uBAAuB,CAChD,MAAO,CAAAC,KAAK,KAAM,gBAAgB,CAElC;AACA,OAASC,YAAY,CAAEC,OAAO,KAAQ,wBAAwB,CAC9D,OAASC,aAAa,KAAQ,yBAAyB,CAEvD;AACA,MAAO,CAAAC,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,SAAS,KAAM,mBAAmB,CAEzC;AACA,OAASC,oBAAoB,KAAQ,yBAAyB,CAE9D;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,cAAsD,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CACzE,KAAM,CAAEE,IAAI,CAAEC,OAAQ,CAAC,CAAGf,OAAO,CAAC,CAAC,CAEnC,GAAIe,OAAO,CAAE,CACX,mBAAOT,IAAA,QAAAU,QAAA,CAAK,eAAa,CAAK,CAAC,CACjC,CAEA,MAAO,CAAAF,IAAI,cAAGR,IAAA,CAAAE,SAAA,EAAAQ,QAAA,CAAGH,OAAO,CAAG,CAAC,cAAGP,IAAA,CAACX,QAAQ,EAACsB,EAAE,CAAC,GAAG,CAAE,CAAC,CACpD,CAAC,CAED,KAAM,CAAAC,GAAa,CAAGA,CAAA,GAAM,CAC1B5B,SAAS,CAAC,IAAM,CACd;AACAc,oBAAoB,CAAC,CAAC,CACnBe,IAAI,CAACC,MAAM,EAAI,CACd,GAAIA,MAAM,CAACC,OAAO,CAAE,CAClBC,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC,CACjD,CAAC,IAAM,CACLD,OAAO,CAACE,KAAK,CAAC,4BAA4B,CAAEJ,MAAM,CAACI,KAAK,CAAC,CAC3D,CACF,CAAC,CAAC,CACN,CAAC,CAAE,EAAE,CAAC,CAEN,mBACEd,KAAA,CAACd,aAAa,EAACE,KAAK,CAAEA,KAAM,CAAAkB,QAAA,eAC1BV,IAAA,CAACT,YAAY,GAAE,CAAC,cAChBS,IAAA,CAACP,YAAY,EAAAiB,QAAA,cACXV,IAAA,CAACL,aAAa,EAAAe,QAAA,cACZV,IAAA,CAACd,MAAM,EAAAwB,QAAA,cACLN,KAAA,CAACjB,MAAM,EAAAuB,QAAA,eACLV,IAAA,CAACZ,KAAK,EAAC+B,IAAI,CAAC,GAAG,CAACZ,OAAO,cAAEP,IAAA,CAACJ,IAAI,GAAE,CAAE,CAAE,CAAC,cACrCI,IAAA,CAACZ,KAAK,EACJ+B,IAAI,CAAC,YAAY,CACjBZ,OAAO,cACLP,IAAA,CAACK,cAAc,EAACE,OAAO,cAAEP,IAAA,CAACH,SAAS,GAAE,CAAE,CAAE,CAC1C,CACF,CAAC,cACFG,IAAA,CAACZ,KAAK,EAAC+B,IAAI,CAAC,GAAG,CAACZ,OAAO,cAAEP,IAAA,CAACX,QAAQ,EAACsB,EAAE,CAAC,GAAG,CAAE,CAAE,CAAE,CAAC,EAC1C,CAAC,CACH,CAAC,CACI,CAAC,CACJ,CAAC,EACF,CAAC,CAEpB,CAAC,CAED,cAAe,CAAAC,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}