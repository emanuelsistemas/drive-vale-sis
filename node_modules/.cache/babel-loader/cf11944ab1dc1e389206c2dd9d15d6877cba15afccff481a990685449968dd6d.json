{"ast":null,"code":"var _jsxFileName = \"/root/m-software/drive-react/src/pages/Auth/FixRlsButton.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fixRlsPolicies } from '../../services/fixRlsPolicies';\nimport { StyledButton } from '../../components/Button/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FixRlsButton = () => {\n  _s();\n  const [isFixing, setIsFixing] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleFixRls = async () => {\n    try {\n      setIsFixing(true);\n      setResult(null);\n      const {\n        success,\n        error\n      } = await fixRlsPolicies();\n      if (success) {\n        setResult('Políticas RLS corrigidas com sucesso! Tente fazer login novamente.');\n      } else {\n        setResult(`Erro ao corrigir políticas RLS: ${error}`);\n      }\n    } catch (error) {\n      setResult(`Erro ao corrigir políticas RLS: ${error}`);\n    } finally {\n      setIsFixing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginTop: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n      $variant: \"secondary\",\n      $fullWidth: false,\n      $isLoading: isFixing,\n      onClick: handleFixRls,\n      disabled: isFixing,\n      style: {\n        marginBottom: '10px'\n      },\n      children: isFixing ? 'Corrigindo...' : 'Corrigir Políticas RLS'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        backgroundColor: result.includes('sucesso') ? '#e6ffe6' : '#ffe6e6',\n        borderRadius: '4px',\n        color: result.includes('sucesso') ? '#006600' : '#cc0000'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(FixRlsButton, \"R0fTmOJyPOrXpp9bGpitGOIj7es=\");\n_c = FixRlsButton;\nexport default FixRlsButton;\nvar _c;\n$RefreshReg$(_c, \"FixRlsButton\");","map":{"version":3,"names":["React","useState","fixRlsPolicies","StyledButton","jsxDEV","_jsxDEV","FixRlsButton","_s","isFixing","setIsFixing","result","setResult","handleFixRls","success","error","style","marginTop","textAlign","children","$variant","$fullWidth","$isLoading","onClick","disabled","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","padding","backgroundColor","includes","borderRadius","color","_c","$RefreshReg$"],"sources":["/root/m-software/drive-react/src/pages/Auth/FixRlsButton.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { fixRlsPolicies } from '../../services/fixRlsPolicies';\nimport { StyledButton } from '../../components/Button/styles';\n\nconst FixRlsButton: React.FC = () => {\n  const [isFixing, setIsFixing] = useState(false);\n  const [result, setResult] = useState<string | null>(null);\n\n  const handleFixRls = async () => {\n    try {\n      setIsFixing(true);\n      setResult(null);\n      \n      const { success, error } = await fixRlsPolicies();\n      \n      if (success) {\n        setResult('Políticas RLS corrigidas com sucesso! Tente fazer login novamente.');\n      } else {\n        setResult(`Erro ao corrigir políticas RLS: ${error}`);\n      }\n    } catch (error) {\n      setResult(`Erro ao corrigir políticas RLS: ${error}`);\n    } finally {\n      setIsFixing(false);\n    }\n  };\n\n  return (\n    <div style={{ marginTop: '20px', textAlign: 'center' }}>\n      <StyledButton\n        $variant=\"secondary\"\n        $fullWidth={false}\n        $isLoading={isFixing}\n        onClick={handleFixRls}\n        disabled={isFixing}\n        style={{ marginBottom: '10px' }}\n      >\n        {isFixing ? 'Corrigindo...' : 'Corrigir Políticas RLS'}\n      </StyledButton>\n      \n      {result && (\n        <div style={{ \n          marginTop: '10px', \n          padding: '10px', \n          backgroundColor: result.includes('sucesso') ? '#e6ffe6' : '#ffe6e6',\n          borderRadius: '4px',\n          color: result.includes('sucesso') ? '#006600' : '#cc0000'\n        }}>\n          {result}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default FixRlsButton;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,cAAc,QAAQ,+BAA+B;AAC9D,SAASC,YAAY,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9D,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAgB,IAAI,CAAC;EAEzD,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACFH,WAAW,CAAC,IAAI,CAAC;MACjBE,SAAS,CAAC,IAAI,CAAC;MAEf,MAAM;QAAEE,OAAO;QAAEC;MAAM,CAAC,GAAG,MAAMZ,cAAc,CAAC,CAAC;MAEjD,IAAIW,OAAO,EAAE;QACXF,SAAS,CAAC,oEAAoE,CAAC;MACjF,CAAC,MAAM;QACLA,SAAS,CAAC,mCAAmCG,KAAK,EAAE,CAAC;MACvD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdH,SAAS,CAAC,mCAAmCG,KAAK,EAAE,CAAC;IACvD,CAAC,SAAS;MACRL,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEJ,OAAA;IAAKU,KAAK,EAAE;MAAEC,SAAS,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACrDb,OAAA,CAACF,YAAY;MACXgB,QAAQ,EAAC,WAAW;MACpBC,UAAU,EAAE,KAAM;MAClBC,UAAU,EAAEb,QAAS;MACrBc,OAAO,EAAEV,YAAa;MACtBW,QAAQ,EAAEf,QAAS;MACnBO,KAAK,EAAE;QAAES,YAAY,EAAE;MAAO,CAAE;MAAAN,QAAA,EAE/BV,QAAQ,GAAG,eAAe,GAAG;IAAwB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,EAEdlB,MAAM,iBACLL,OAAA;MAAKU,KAAK,EAAE;QACVC,SAAS,EAAE,MAAM;QACjBa,OAAO,EAAE,MAAM;QACfC,eAAe,EAAEpB,MAAM,CAACqB,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG,SAAS;QACnEC,YAAY,EAAE,KAAK;QACnBC,KAAK,EAAEvB,MAAM,CAACqB,QAAQ,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG;MAClD,CAAE;MAAAb,QAAA,EACCR;IAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CAjDID,YAAsB;AAAA4B,EAAA,GAAtB5B,YAAsB;AAmD5B,eAAeA,YAAY;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}