{"ast":null,"code":"import React,{useState}from'react';import{Container,Input,ToggleButton,ErrorMessage}from'./styles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PasswordInput=_ref=>{let{id,label,value,onChange,required=false,minLength,error,onBlur}=_ref;const[showPassword,setShowPassword]=useState(false);const togglePasswordVisibility=()=>{setShowPassword(!showPassword);};return/*#__PURE__*/_jsxs(Container,{children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:id,children:label}),/*#__PURE__*/_jsxs(\"div\",{className:\"password-container\",children:[/*#__PURE__*/_jsx(Input,{type:showPassword?'text':'password',id:id,value:value,onChange:onChange,required:required,minLength:minLength,onBlur:onBlur,className:error?'invalid':''}),/*#__PURE__*/_jsx(ToggleButton,{type:\"button\",onClick:togglePasswordVisibility,className:showPassword?'visible':'',children:/*#__PURE__*/_jsx(\"i\",{className:`fas ${showPassword?'fa-eye-slash':'fa-eye'}`})})]}),error&&/*#__PURE__*/_jsx(ErrorMessage,{children:error})]});};export default PasswordInput;","map":{"version":3,"names":["React","useState","Container","Input","ToggleButton","ErrorMessage","jsx","_jsx","jsxs","_jsxs","PasswordInput","_ref","id","label","value","onChange","required","minLength","error","onBlur","showPassword","setShowPassword","togglePasswordVisibility","children","htmlFor","className","type","onClick"],"sources":["/root/m-software/drive-react/src/components/PasswordInput/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Container, Input, ToggleButton, ErrorMessage } from './styles';\n\ninterface PasswordInputProps {\n  id: string;\n  label: string;\n  value: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  required?: boolean;\n  minLength?: number;\n  error?: string;\n  onBlur?: (e: React.FocusEvent<HTMLInputElement>) => void;\n}\n\nconst PasswordInput: React.FC<PasswordInputProps> = ({\n  id,\n  label,\n  value,\n  onChange,\n  required = false,\n  minLength,\n  error,\n  onBlur\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  return (\n    <Container>\n      <label htmlFor={id}>{label}</label>\n      <div className=\"password-container\">\n        <Input\n          type={showPassword ? 'text' : 'password'}\n          id={id}\n          value={value}\n          onChange={onChange}\n          required={required}\n          minLength={minLength}\n          onBlur={onBlur}\n          className={error ? 'invalid' : ''}\n        />\n        <ToggleButton\n          type=\"button\"\n          onClick={togglePasswordVisibility}\n          className={showPassword ? 'visible' : ''}\n        >\n          <i className={`fas ${showPassword ? 'fa-eye-slash' : 'fa-eye'}`}></i>\n        </ToggleButton>\n      </div>\n      {error && <ErrorMessage>{error}</ErrorMessage>}\n    </Container>\n  );\n};\n\nexport default PasswordInput;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,KAAK,CAAEC,YAAY,CAAEC,YAAY,KAAQ,UAAU,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAaxE,KAAM,CAAAC,aAA2C,CAAGC,IAAA,EAS9C,IAT+C,CACnDC,EAAE,CACFC,KAAK,CACLC,KAAK,CACLC,QAAQ,CACRC,QAAQ,CAAG,KAAK,CAChBC,SAAS,CACTC,KAAK,CACLC,MACF,CAAC,CAAAR,IAAA,CACC,KAAM,CAACS,YAAY,CAAEC,eAAe,CAAC,CAAGpB,QAAQ,CAAC,KAAK,CAAC,CAEvD,KAAM,CAAAqB,wBAAwB,CAAGA,CAAA,GAAM,CACrCD,eAAe,CAAC,CAACD,YAAY,CAAC,CAChC,CAAC,CAED,mBACEX,KAAA,CAACP,SAAS,EAAAqB,QAAA,eACRhB,IAAA,UAAOiB,OAAO,CAAEZ,EAAG,CAAAW,QAAA,CAAEV,KAAK,CAAQ,CAAC,cACnCJ,KAAA,QAAKgB,SAAS,CAAC,oBAAoB,CAAAF,QAAA,eACjChB,IAAA,CAACJ,KAAK,EACJuB,IAAI,CAAEN,YAAY,CAAG,MAAM,CAAG,UAAW,CACzCR,EAAE,CAAEA,EAAG,CACPE,KAAK,CAAEA,KAAM,CACbC,QAAQ,CAAEA,QAAS,CACnBC,QAAQ,CAAEA,QAAS,CACnBC,SAAS,CAAEA,SAAU,CACrBE,MAAM,CAAEA,MAAO,CACfM,SAAS,CAAEP,KAAK,CAAG,SAAS,CAAG,EAAG,CACnC,CAAC,cACFX,IAAA,CAACH,YAAY,EACXsB,IAAI,CAAC,QAAQ,CACbC,OAAO,CAAEL,wBAAyB,CAClCG,SAAS,CAAEL,YAAY,CAAG,SAAS,CAAG,EAAG,CAAAG,QAAA,cAEzChB,IAAA,MAAGkB,SAAS,CAAE,OAAOL,YAAY,CAAG,cAAc,CAAG,QAAQ,EAAG,CAAI,CAAC,CACzD,CAAC,EACZ,CAAC,CACLF,KAAK,eAAIX,IAAA,CAACF,YAAY,EAAAkB,QAAA,CAAEL,KAAK,CAAe,CAAC,EACrC,CAAC,CAEhB,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}