{"ast":null,"code":"import{supabase}from'./supabase';// Função para fazer upload de arquivo\nexport const uploadFile=async(file,userId)=>{try{const fileExt=file.name.split('.').pop();const fileName=`${Math.random().toString(36).substring(2)}.${fileExt}`;const filePath=`${userId}/${fileName}`;const{data,error}=await supabase.storage.from('files').upload(filePath,file);if(error){throw error;}// Registrar o arquivo no banco de dados\nconst{data:fileData,error:fileError}=await supabase.from('files').insert([{name:file.name,size:file.size,type:file.type,path:filePath,user_id:userId,is_public:false}]).select();if(fileError){throw fileError;}return fileData[0];}catch(error){console.error('Erro ao fazer upload:',error);throw error;}};// Função para listar arquivos do usuário\nexport const listFiles=async userId=>{try{const{data,error}=await supabase.from('files').select('*').eq('user_id',userId).order('created_at',{ascending:false});if(error){throw error;}return data;}catch(error){console.error('Erro ao listar arquivos:',error);throw error;}};// Função para obter URL de download\nexport const getFileUrl=async filePath=>{try{const{data,error}=await supabase.storage.from('files').createSignedUrl(filePath,60);// URL válida por 60 segundos\nif(error){throw error;}return data.signedUrl;}catch(error){console.error('Erro ao obter URL do arquivo:',error);throw error;}};// Função para excluir arquivo\nexport const deleteFile=async(fileId,filePath)=>{try{// Remover do storage\nconst{error:storageError}=await supabase.storage.from('files').remove([filePath]);if(storageError){throw storageError;}// Remover do banco de dados\nconst{error:dbError}=await supabase.from('files').delete().eq('id',fileId);if(dbError){throw dbError;}return true;}catch(error){console.error('Erro ao excluir arquivo:',error);throw error;}};","map":{"version":3,"names":["supabase","uploadFile","file","userId","fileExt","name","split","pop","fileName","Math","random","toString","substring","filePath","data","error","storage","from","upload","fileData","fileError","insert","size","type","path","user_id","is_public","select","console","listFiles","eq","order","ascending","getFileUrl","createSignedUrl","signedUrl","deleteFile","fileId","storageError","remove","dbError","delete"],"sources":["/root/m-software/drive-react/src/services/fileService.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport { FileObject } from '../types/supabase';\n\n// Função para fazer upload de arquivo\nexport const uploadFile = async (file: File, userId: string) => {\n  try {\n    const fileExt = file.name.split('.').pop();\n    const fileName = `${Math.random().toString(36).substring(2)}.${fileExt}`;\n    const filePath = `${userId}/${fileName}`;\n\n    const { data, error } = await supabase.storage\n      .from('files')\n      .upload(filePath, file);\n\n    if (error) {\n      throw error;\n    }\n\n    // Registrar o arquivo no banco de dados\n    const { data: fileData, error: fileError } = await supabase\n      .from('files')\n      .insert([\n        {\n          name: file.name,\n          size: file.size,\n          type: file.type,\n          path: filePath,\n          user_id: userId,\n          is_public: false\n        }\n      ])\n      .select();\n\n    if (fileError) {\n      throw fileError;\n    }\n\n    return fileData[0];\n  } catch (error) {\n    console.error('Erro ao fazer upload:', error);\n    throw error;\n  }\n};\n\n// Função para listar arquivos do usuário\nexport const listFiles = async (userId: string) => {\n  try {\n    const { data, error } = await supabase\n      .from('files')\n      .select('*')\n      .eq('user_id', userId)\n      .order('created_at', { ascending: false });\n\n    if (error) {\n      throw error;\n    }\n\n    return data as FileObject[];\n  } catch (error) {\n    console.error('Erro ao listar arquivos:', error);\n    throw error;\n  }\n};\n\n// Função para obter URL de download\nexport const getFileUrl = async (filePath: string) => {\n  try {\n    const { data, error } = await supabase.storage\n      .from('files')\n      .createSignedUrl(filePath, 60); // URL válida por 60 segundos\n\n    if (error) {\n      throw error;\n    }\n\n    return data.signedUrl;\n  } catch (error) {\n    console.error('Erro ao obter URL do arquivo:', error);\n    throw error;\n  }\n};\n\n// Função para excluir arquivo\nexport const deleteFile = async (fileId: string, filePath: string) => {\n  try {\n    // Remover do storage\n    const { error: storageError } = await supabase.storage\n      .from('files')\n      .remove([filePath]);\n\n    if (storageError) {\n      throw storageError;\n    }\n\n    // Remover do banco de dados\n    const { error: dbError } = await supabase\n      .from('files')\n      .delete()\n      .eq('id', fileId);\n\n    if (dbError) {\n      throw dbError;\n    }\n\n    return true;\n  } catch (error) {\n    console.error('Erro ao excluir arquivo:', error);\n    throw error;\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}